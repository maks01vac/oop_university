import math

# 11
# В США потребление автомобильного топлива исчисляется в  милях на 
# галлон (miles-per-gallon – MPG). В то же время в Канаде этот показатель 
# обычно выражается в  литрах на 100 км (liters-per-hundred kilometers – 
# L/100 km). Используйте свои исследовательские способности, 
# чтобы определить формулу перевода первых единиц исчисления в последние.
# После этого напишите программу, запрашивающую у пользователя показатель 
# потребления топлива автомобилем в американских единицах и 
# выводящую его на экран в канадских единицах.

MPG = float(input('Введите расход топлива в милях на галлон:'))

lpg = 3.785 #литров в галлоне
kmpm = 1.609 #киллометров в миле

LPK = (100*lpg)/(kmpm*MPG)

print("Расход топлива в литрах на 100 км: ",LPK)

# 12 
# Как известно, поверхность планеты Земля искривлена, и расстояние между точками, 
# характеризующимися одинаковыми градусами по долготе, 
# может быть разным в зависимости от широты. Таким образом, для вычис-
# Введение в программирование  27
# ления расстояния между двумя точками на Земле одной лишь теоремой 
# Пифагора не обойтись.
# Допустим, (t1, g1) и (t2, g2) – координаты широты и долготы двух точек на 
# поверхности Земли. Тогда расстояние в километрах между ними с учетом 
# искривленности планеты можно найти по следующей формуле:
# distance = 6371,01´arccos(sin(t1)´sin(t2) + cos(t1)´cos(t2)´cos(g1 - g2)).
# Примечание. Число 6371,01 в этой формуле, конечно, было выбрано не случайно 
# и представляет собой среднее значение радиуса Земли в километрах.
# Напишите программу, в которой пользователь будет вводить координаты двух 
# точек на Земле (широту и долготу) в градусах. На выходе мы 
# должны получить расстояние между этими точками при следовании по 
# кратчайшему пути по поверхности планеты.


t1 = float(input('Введите широту первой точки - t1:'))
t1 = math.radians(t1)
t2 = float(input('Введите широту второй точки - t2:'))
t2 = math.radians(t2)

g1 = float(input('Введите долготу первой точки - g1:'))
g1 = math.radians(g1)
g2 = float(input('Введите долготу второй точки - g2:'))
g2 = math.radians(g2)

distance = 6371.01*math.acos(math.sin(t1)*math.sin(t2)+math.cos(t1)*math.cos(t2)*math.cos(g1-g2))

print('Расстояние между двумя точками равно: ',distance)


# 13
# Напишите программу, которая будет запрашивать у пользователя сумму сдачи в центах. 
# После этого она должна рассчитать и вывести на экран, 
# сколько и каких монет потребуется для выдачи указанной суммы, 
# при условии что должно быть задействовано минимально возможное количество монет. 
# Допустим, у нас есть в распоряжении монеты достоинством в 1, 
# 5, 10, 25 центов, а также в 1 (loonie) и 2 (toonie) канадских доллара.


change = int(input('Введите количество сдачи в центах:'))

toonie = change//200
change = change % 200

loonie = change//100
change = change % 100

quarter = change//25
change = change % 25

tenCent = change//10
change = change % 10

fiveCent = change//5
change = change % 5

print('Вы нужно ',toonie,' toonie, ',loonie,' loonie, ',quarter, " по 25 cent, ", tenCent," по 10 cent, ",fiveCent," по 5 cent и ", change,"по 1 cent")

#14
# Многие люди на планете привыкли рассчитывать рост человека в футах 
# и дюймах, даже если в их стране принята метрическая система. Напишите 
# программу, которая будет запрашивать у пользователя количество футов, 
# а  затем дюймов в  его росте. После этого она должна пересчитать рост 
# в сантиметры и вывести его на экран.

a,b=map(int,input("Введите рост в футах и дюймах через пробел: ").split())

growth = a*12*2.54 + b*2.54

print('Ваш рост в см: ',growth)

#15
# Для этого упражнения вам необходимо будет написать программу, 
# которая будет запрашивать у  пользователя расстояние в  футах. После этого 
# она должна будет пересчитать это число в дюймы, ярды и мили и вывести на экран. 
# Коэффициенты для пересчета единиц вы без труда найдете в интернете

distanse = float(input('Введите расстояние в футах:'))

print('Расстояние в дюймах:',distanse*12)
print('Расстояние в ярдах:',distanse/3)
print('Расстояние в милях:',distanse/5280)
